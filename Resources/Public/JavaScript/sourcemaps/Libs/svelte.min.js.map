{"version":3,"sources":["svelte.js"],"names":["window","document","Svelte","selector","context","Object","create","svelteProto","s","get","startAt","querySelectorAll","nl","arr","i","len","length","set","value","each","callback","find","css","property","el","style","getComputedStyle","hide","display","show","visible","offsetWidth","offsetHeight","toggle","addClass","className","classList","add","removeClass","remove","toggleClass","hasClass","contains","on","name","split","forEach","ev","addEventListener","one","callbackWithRemove","removeEventListener","off","focus","blur","trigger","detail","triggerEvent","CustomEvent","createEvent","initEvent","dispatchEvent","prev","previousElementSibling","next","nextElementSibling","first","last","arrayLength","slice","parent","parentNode","children","call","append","position","html","toLowerCase","insertAdjacentHTML","text","textContent","trim","innerHTML","outerHTML","empty","clone","clodeNode","removeChild","attr","setAttribute","getAttribute","removeAttr","removeAttribute","val","height","width","getBoundingClientRect","matches","closest","define","amd","$","fn","Element","prototype","matchesSelector","msMatchesSelector","webkitMatchesSelector","node","parentElement"],"mappings":"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","sourcesContent":["/**\n* @fileOverview svelte - the lightweight modern DOM manipulation and events library\n* @author Matt Begent\n* @version 1.4.3\n*/\n\n(function (window, document) {\n\n    'use strict';\n\n    var svelteProto = {\n\n        /**\n        * Each loop\n        * @memberOf Svelte\n        * @param {function} callback Function to be run on each selector\n        * @returns Svelte\n        * @example\n        * $('.each').each(function() { });\n        */\n        each: function(callback) {\n            for (var i = 0, len = this.s.length; i < len; i++) {\n                callback(this.s[i]);\n            }\n            return this;\n        },\n\n        /**\n        * Find a new selector within a parent selector\n        * @memberOf Svelte\n        * @param {string} selector Find a new selector within a parent selector\n        * @returns Svelte\n        * @example\n        * $('.parent').find('.child');\n        */\n        find: function(selector) {\n            return new Svelte(selector, this.s[0]);\n        },\n\n        /**\n        * Set the CSS for an element\n        * @memberOf Svelte\n        * @param {string} property Property of element to set\n        * @param {string} value Value of property to set\n        * @returns Svelte\n        * @example\n        * $('.color').css('color', 'red');\n        */\n        css: function(property, value) {\n            if(value) {\n                return this.each(function(el) {\n                    el.style[property] = value;\n                });\n            } else {\n                return getComputedStyle(this.s[0])[property];\n            }\n        },\n\n        /**\n        * Sets selector to display none\n        * @memberOf Svelte\n        * @returns Svelte\n        * @example\n        * $('.hide').hide();\n        */\n        hide: function() {\n            return this.each(function(el) {\n                el.style.display = 'none';\n            });\n        },\n\n        /**\n        * Sets selector to display block\n        * @memberOf Svelte\n        * @returns Svelte\n        * @example\n        * $('.show').show();\n        */\n        show: function() {\n            return this.each(function(el) {\n                el.style.display = 'block';\n            });\n        },\n\n        /**\n        * Checks whether the selector is visible\n        * @memberOf Svelte\n        * @returns Boolean\n        * @example\n        * $('.visible').visible();\n        */\n        visible: function() {\n            if(this.s.length > 0) {\n                return this.s[0].offsetWidth > 0 || this.s[0].offsetHeight > 0;\n            } else {\n                return false;\n            }\n        },\n\n        /**\n        * Toggles the display property of the selector\n        * @memberOf Svelte\n        * @returns Boolean\n        * @example\n        * $('.visible').visible();\n        */\n        toggle: function() {\n            return this.each(function(el) {\n                if(el.style.display === '' || el.style.display === 'block') {\n                    el.style.display = 'none';\n                }\n                else {\n                    el.style.display = 'block';\n                }\n            });\n        },\n\n        /**\n        * Adds a class to the selector\n        * @memberOf Svelte\n        * @param {string} className Name of class to add\n        * @returns Svelte\n        * @example\n        * $('.class').addClass('another-class');\n        */\n        addClass: function(className) {\n            return this.each(function(el) {\n                el.classList.add(className);\n            });\n        },\n\n        /**\n        * Removes a class from the selector\n        * @memberOf Svelte\n        * @param {string} className Name of class to remove\n        * @returns Svelte\n        * @example\n        * $('.class remove-class').removeClass('remove-class');\n        */\n        removeClass: function(className) {\n            return this.each(function(el) {\n                el.classList.remove(className);\n            });\n        },\n\n        /**\n        * Toggles a class from the selector\n        * @memberOf Svelte\n        * @param {string} className Name of class to toggle\n        * @returns Svelte\n        * @example\n        * $('.class toggle-class').toggleClass('toggle-class');\n        */\n        toggleClass: function(className) {\n            return this.each(function(el) {\n                el.classList.toggle(className);\n            });\n        },\n\n        /**\n        * Checks whether the selector has a specific class\n        * @memberOf Svelte\n        * @returns Boolean\n        * @example\n        * $('.class').hasClass('another-class');\n        */\n        hasClass: function(className) {\n            if(this.s.length > 0) {\n                return this.s[0].classList.contains(className);\n            } else {\n                return false;\n            }\n\n        },\n\n        /**\n        * Attaches an event to the selector\n        * @memberOf Svelte\n        * @param {string} name Name of event e.g. click or names of events separated by spaces e.g. 'keyup keydown'\n        * @param {function} callback Callback to run when event is triggered\n        * @returns Svelte\n        * @example\n        * $('.click-me').on('click', function() { alert('Clicked!'); });\n        */\n        on: function(name, callback) {\n            return this.each(function(el) {\n                name.split(' ').forEach(function(ev){\n                    el.addEventListener(ev, callback);\n                });\n            });\n        },\n\n        /**\n        * Attaches an event to the selector and removes after callback\n        * @memberOf Svelte\n        * @param {string} name Name of event e.g. 'click' or names of events separated by spaces e.g. 'keyup keydown'\n        * @param {function} callback Callback to run when event is triggered\n        * @returns Svelte\n        * @example\n        * $('.click-me').one('click', function() { alert('Clicked!'); });\n        */\n        one: function(name, callback) {\n            return this.each(function(el) {\n                name.split(' ').forEach(function(ev){\n                    var callbackWithRemove = function() {\n                        callback();\n                        el.removeEventListener(ev, callbackWithRemove); // remove event\n                    };\n                    el.addEventListener(ev, callbackWithRemove);\n                });\n            });\n        },\n\n        /**\n        * Removes an event from the selector\n        * @memberOf Svelte\n        * @param {string} name Name of event e.g. click or names of events separated by spaces e.g. 'keyup keydown'\n        * @param {function} callback Callback to run when event is triggered\n        * @returns Svelte\n        * @example\n        * $('.click-me').off('click', function() { alert('Clicked!'); });\n        */\n        off: function(name, callback) {\n            return this.each(function(el) {\n                name.split(' ').forEach(function(ev){\n                    el.removeEventListener(ev, callback);\n                });\n            });\n        },\n\n        /**\n        * Sets the first selector to be focussed\n        * @memberOf Svelte\n        * @returns Svelte\n        * @example\n        * $('.focus').focus();\n        */\n        focus: function() {\n            if(this.s.length > 0) {\n                this.s[0].focus();\n            }\n            return this;\n        },\n\n        /**\n        * Removes keyboard focus from first selector\n        * @memberOf Svelte\n        * @returns Svelte\n        * @example\n        * $('.blur').blur();\n        */\n        blur: function() {\n            if(this.s.length > 0) {\n                this.s[0].blur();\n            }\n            return this;\n        },\n\n        /**\n        * Trigger an event from the selector\n        * @memberOf Svelte\n        * @param {string} name Name of event e.g. click\n        * @param {object} detail The data passed when initializing the event\n        * @returns Svelte\n        * @example\n        * $('.click-me').trigger('click');\n        */\n        trigger: function(name, detail) {\n            return this.each(function(el) {\n                var triggerEvent = ((detail) ? new CustomEvent(name, detail) : document.createEvent('HTMLEvents'));\n                if(!detail) {\n                    triggerEvent.initEvent(name, true, false);\n                }\n                el.dispatchEvent(triggerEvent);\n            });\n        },\n\n        /**\n        * Find the previous sibling to the current selector\n        * @memberOf Svelte\n        * @returns Svelte\n        * @example\n        * $('.selector').prev();\n        */\n        prev: function() {\n            if(this.s.length > 0) {\n                this.s = this.s[0].previousElementSibling;\n            } else {\n                this.s = [];\n            }\n            return this;\n        },\n\n        /**\n        * Find the next sibling to the current selector\n        * @memberOf Svelte\n        * @returns Svelte\n        * @example\n        * $('.selector').next();\n        */\n        next: function() {\n            if(this.s.length > 0) {\n                this.s = this.s[0].nextElementSibling;\n            } else {\n                this.s = [];\n            }\n            return this;\n        },\n\n        /**\n        * Find the first element of the selector\n        * @memberOf Svelte\n        * @returns Svelte\n        * @example\n        * $('.selector').first();\n        */\n        first: function() {\n            if(this.s.length > 0) {\n                this.s = this.s[0];\n            }\n            return this;\n        },\n\n        /**\n        * Find the last element of the selector\n        * @memberOf Svelte\n        * @returns Svelte\n        * @example\n        * $('.selector').last();\n        */\n        last: function() {\n            if(this.s.length > 0) {\n                var arrayLength = this.s.length;\n                this.s = this.s.slice(arrayLength-1,arrayLength);\n            }\n            return this;\n        },\n\n        /**\n        * Find the parent of the selector\n        * @memberOf Svelte\n        * @returns Svelte\n        * @example\n        * $('.selector').parent();\n        */\n        parent: function() {\n            if(this.s.length > 0) {\n                this.s = this.s[0].parentNode;\n            }\n            return this;\n        },\n\n        /**\n        * Find the children of the selector\n        * @memberOf Svelte\n        * @returns Svelte\n        * @example\n        * $('.selector').children();\n        */\n        children: function() {\n            if(this.s.length > 0) {\n                this.s.slice.call(this.s[0].children);\n            } else {\n                this.s = [];\n            }\n            return this;\n        },\n\n        /**\n        * Add HTML to the page in relation to the current selector\n        * @memberOf Svelte\n        * @param {string} position The position to add the html - before, after, atstart, atend\n        * @param {string} html The HTML to add\n        * @returns Svelte\n        * @example\n        * $('.html').append('before','<p>I am before</p>');\n        */\n        append: function(position, html) {\n            return this.each(function(el) {\n                switch(position.toLowerCase()){\n                    case 'before': return el.insertAdjacentHTML('beforebegin', html);\n                    case 'after': return el.insertAdjacentHTML('afterend', html);\n                    case 'atstart': return el.insertAdjacentHTML('afterbegin', html);\n                    case 'atend': return el.insertAdjacentHTML('beforeend', html);\n                }\n            });\n        },\n\n        /**\n        * Set the text of a selector\n        * @memberOf Svelte\n        * @param {string} text Text to set\n        * @returns Svelte or text\n        * @example\n        * $('.text').text('Some text.');\n        */\n        text: function(text) {\n            if(text) {\n                return this.each(function(el) {\n                    el.textContent = text;\n                });\n            } else {\n                return this.s[0].textContent.trim();\n            }\n        },\n\n        /**\n        * Set the HTML of a selector\n        * @memberOf Svelte\n        * @param {string} html HTML to set\n        * @returns Svelte or HTML\n        * @example\n        * $('.text').html('<span>A span.</span>');\n        */\n        html: function(html) {\n            if(html) {\n                return this.each(function(el) {\n                    el.innerHTML = html;\n                });\n            } else {\n                return this.s[0].innerHTML;\n            }\n        },\n\n        /**\n        * Set the outerHTML of a selector\n        * @memberOf Svelte\n        * @param {string} html HTML to set\n        * @returns Svelte or HTML\n        * @example\n        * $('.text').outerHTML('<span>A span.</span>');\n        */\n        outerHTML: function(html) {\n            if(html) {\n                return this.each(function(el) {\n                    el.outerHTML = html;\n                });\n            } else {\n                return this.s[0].outerHTML;\n            }\n        },\n\n        /**\n        * Empty the HTML of a selector\n        * @memberOf Svelte\n        * @returns Svelte\n        * @example\n        * $('.empty-me').empty();\n        */\n        empty: function() {\n            return this.each(function(el) {\n                el.innerHTML = '';\n            });\n        },\n\n        /**\n        * Clone a selector\n        * @memberOf Svelte\n        * @returns Svelte\n        * @example\n        * $('.empty-me').clone();\n        */\n        clone: function() {\n            return this.each(function(el) {\n                el.clodeNode(true);\n            });\n        },\n\n        /**\n        * Removes a selector\n        * @memberOf Svelte\n        * @returns Svelte\n        * @example\n        * $('.remove-me').remove();\n        */\n        remove: function() {\n            return this.each(function(el) {\n                el.parentNode.removeChild(el);\n            });\n        },\n\n        /**\n        * Get or set the attribute of a selector\n        * @memberOf Svelte\n        * @param {string} name Attr to get or set\n        * @param {string} value Value to set\n        * @returns Svelte\n        * @example\n        * $('.get-attr').attr('data-attr');\n        * $('.set-attr').attr('data-attr','Value');\n        */\n        attr: function(name, value) {\n            if(!value) {\n                return this.s[0].getAttribute(name);\n            } else {\n                return this.each(function(el) {\n                    el.setAttribute(name, value);\n                });\n            }\n        },\n\n        /**\n        * Remove an attribute from a selector\n        * @memberOf Svelte\n        * @param {string} name Attr to remove\n        * @returns Svelte\n        * @example\n        * $('.attr').removeAttr('data-attr');\n        */\n        removeAttr: function(name) {\n            return this.each(function(el) {\n                el.removeAttribute(name);\n            });\n        },\n\n        /**\n        * Get the value of a selector\n        * @memberOf Svelte\n        * @param {string} value Value to set\n        * @returns value\n        * @example\n        * $('.input').val();\n        */\n        val: function(value) {\n            if(value) {\n                return this.each(function(el) {\n                    el.value = value;\n                });\n            } else {\n                if(this.s.length > 0) {\n                    return this.s[0].value;\n                } else {\n                    return undefined;\n                }\n            }\n        },\n\n        /**\n        * Get the number of matched elements in the selector\n        * @memberOf Svelte\n        * @returns length\n        * @example\n        * $('.length').length();\n        */\n        length: function() {\n            return this.s.length;\n        },\n\n        /**\n        * Get the height of the first element in the selector\n        * @memberOf Svelte\n        * @returns number height\n        * @example\n        * $('.height').height();\n        */\n        height: function() {\n            if(this.s.length > 0) {\n                return this.s[0].offsetHeight;\n            } else {\n                return null;\n            }\n        },\n\n        /**\n        * Get the width of the first element in the selector\n        * @memberOf Svelte\n        * @returns number width\n        * @example\n        * $('.width').width();\n        */\n        width: function() {\n            if(this.s.length > 0) {\n                return this.s[0].offsetWidth;\n            } else {\n                return null;\n            }\n        },\n\n        /**\n        * Returns the position of the first element in the selector relative to the viewport\n        * @memberOf Svelte\n        * @returns TextRectangle object\n        * @example\n        * $('.position').position();\n        */\n        position: function() {\n            if(this.s.length > 0) {\n                return this.s[0].getBoundingClientRect();\n            } else {\n                return null;\n            }\n        },\n\n        /**\n        * Returns true if the element matches the selector string\n        * @memberOf Svelte\n        * @param {string} selector Selector to match\n        * @returns boolean\n        * @example\n        * $('.paragraph').matches('p');\n        */\n        matches: function(selector) {\n            return this.s[0].matches(selector);\n        },\n\n        /**\n        * Returns closest element to selector\n        * @memberOf Svelte\n        * @param {string} selector Selector to match\n        * @returns Svelte\n        * @example\n        * $('.logo').closest('.header');\n        */\n        closest: function(selector) {\n            return new Svelte(this.s[0].closest(selector));\n        }\n\n    };\n\n    /** @constructor Svelte */\n    function Svelte(selector, context) {\n        return Object.create(svelteProto, {\n            s: {\n                get: function () {\n                    if(typeof selector  === 'string') {\n                        var startAt = ((context  === 'string') ? document.querySelectorAll(selector) : context) || document; // tidy up\n                        var nl = startAt.querySelectorAll(selector);\n                        var arr = [];\n\n                        for (var i = 0, len = arr.length = nl.length; i < len; i++) {\n                            arr[i] = nl[i];\n                        }\n\n                        return arr;\n                    } else {\n                        return [selector]; // could be an object, dom node or a function but always kept in an array\n                    }\n                },\n                set: function(value) {\n                    selector = value;\n                }\n            }\n        });\n    }\n\n    // AMD support\n    if (typeof define === \"function\" && define.amd) {\n        define(function() {\n            return Svelte;\n        });\n    }\n\n    // Expose svelte to the world:-)\n    window.$ = window.Svelte = Svelte;\n\n    // Expose functions to the world\n    window.$.fn = svelteProto;\n\n    }(window, document));\n\n    // Polyfills\n\n    // Matches - prefixed in IE, IOS7 Safari and older Android browser versions\n    if(!Element.prototype.matches) {\n        Element.prototype.matches =  Element.prototype.matchesSelector || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n    }\n\n    // Closest - not yet supported by IE and Safari\n    if(!Element.prototype.closest) {\n        Element.prototype.closest = function closest(selector) {\n            var node = this;\n            while (node) {\n                if (node.matches(selector)) {\n                    return node;\n                }\n                else {\n                    node = node.parentElement;\n                }\n            }\n            return null;\n        };\n    }\n"],"file":"../../Libs/svelte.min.js"}